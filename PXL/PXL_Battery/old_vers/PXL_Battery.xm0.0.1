#import "PXL_Battery.h"

NSString *img(NSString *img){
	return [NSString stringWithFormat:@"/var/mobile/Library/PXLBattery/%@.png", img];
}

%group PXLBattery

%hook _UIBatteryView
- (bool) _shouldShowBolt {return NO;} // hide charging bolt
- (id) _batteryFillColor {return [UIColor clearColor];} // hide the fill
- (id) bodyColor {return [UIColor clearColor];} // hide the body
- (id) pinColor {return [UIColor clearColor];} // hide the pin
- (CGFloat) bodyColorAlpha {return 0.0;} // hide battery body again
- (CGFloat) pinColorAlpha {return 0.0;} // hide battery pin again

//-----------------------------------------------
-(void)_updateFillLayer{// Keep updating icon
	%orig;
	[self refreshIcon];
}

-(void)setSaverModeActive:(bool)arg1 {
	%orig;
	[self refreshIcon];
}

-(void)setChargingState:(long long)arg1{
	%orig;
	isCharging = (arg1 == 1); // state of 1 means currently charging
	[self refreshIcon];
}
//-----------------------------------------------
-(CGFloat)chargePercent {
	CGFloat orig = %orig;
	actualPercentage = orig * 100;

	return orig;
}

%new
-(void)refreshIcon// remove existing images
{
	[self chargePercent];
	statusBarBatteryIconView = nil;
	statusBarBatteryChargerView = nil;
	for (UIImageView* imageView in [self subviews]) 
		[imageView removeFromSuperview];

	// face
	if (!statusBarBatteryIconView){
		statusBarBatteryIconView = [[UIImageView alloc] initWithFrame:[self bounds]];
		[statusBarBatteryIconView setContentMode:UIViewContentModeScaleAspectFill];
		[statusBarBatteryIconView setAutoresizingMask:UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight];
		if (![statusBarBatteryIconView isDescendantOfView:self]) [self addSubview:statusBarBatteryIconView];
	}

	// charger
	if (!statusBarBatteryChargerView && isCharging){
		statusBarBatteryChargerView = [[UIImageView alloc] initWithFrame:[self bounds]];
		[statusBarBatteryChargerView setContentMode:UIViewContentModeScaleAspectFill];
		[statusBarBatteryChargerView setAutoresizingMask:UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight];
		if (![statusBarBatteryChargerView isDescendantOfView:self])
			[self addSubview:statusBarBatteryChargerView];
	}

	NSString *image = nil;
 if (actualPercentage >= 80){
  image = img(@"A");
 }else if (actualPercentage >= 60){
  image = img(@"B");
 }else if (actualPercentage >= 40){
  image = img(@"C");
 }else if (actualPercentage >= 20){
  image = img(@"D");
 }else if (actualPercentage >= 10){
  image = img(@"E");
 }else if (actualPercentage >= 5){
  image = img(@"F");
 }else{
		image = img(@"F");
	}


	[statusBarBatteryIconView setImage:[UIImage imageWithContentsOfFile:image]];
	[self updateIconColor];
}

%new
-(void)updateIconColor{
	statusBarBatteryIconView.image = [statusBarBatteryIconView.image imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];
	statusBarBatteryChargerView.image = [statusBarBatteryChargerView.image imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];

	if (![self saverModeActive]){
		if (isCharging){
			[statusBarBatteryIconView setTintColor:[UIColor greenColor]];
			[statusBarBatteryChargerView setTintColor:[UIColor greenColor]];
		}else{
			[statusBarBatteryIconView setTintColor:[UIColor labelColor]];
			[statusBarBatteryChargerView setTintColor:[UIColor labelColor]];
		}
	} else{
		if (isCharging){
			[statusBarBatteryIconView setTintColor:[UIColor greenColor]];
			[statusBarBatteryChargerView setTintColor:[UIColor greenColor]];
		}else{
			[statusBarBatteryIconView setTintColor:[UIColor yellowColor]];
			[statusBarBatteryChargerView setTintColor:[UIColor yellowColor]];
		}
	}
}
%end
%end
%ctor {%init(PXLBattery);}
